version: "3.2"
services:
  db:
    image: postgres:9.4
    restart: always
    container_name: DB_A
    ports:
      - "5432:5432"
    networks:
      - postgresql
    environment:
      POSTGRES_PASSWORD: "bar123"
      POSTGRES_DB: "foo"
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin4:
    image: dpage/pgadmin4
    restart: always
    container_name:  pgadmin4_B
    environment:
      PGADMIN_DEFAULT_EMAIL: "mascotas@mascotas.com"
      PGADMIN_DEFAULT_PASSWORD: "bar123"
    ports:
      - "80:80"
    links:
      - db
    networks:
      - postgresql
    depends_on:
      - db

  scraper:
    build: ./scraper
    restart: on-failure:5
    container_name: scraper_C
    networks:
      - postgresql
    volumes:
      - type: bind
        source: ./scraper
        target: /usr/src/app
    depends_on:
      - db
    env_file:
      - ./scraper/env.list
    command: python ./scraper.py

  api:
    build: ./api
    restart: on-failure:5
    container_name: api_D
    ports:
      - "5000:5000"
    networks:
      - postgresql
    volumes:
      - type: bind
        source: ./api
        target: /usr/src/app
    depends_on:
      - db
    env_file:
      - ./api/env.list
    command: python ./main.py

  web:
    build: ./app
    command: npm start
    volumes:
      - ./app:/app
    ports:
      - "3000:3000"





networks:
  postgresql:
    driver: bridge
  
